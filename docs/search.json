[{"path":"/articles/load_img.html","id":"section-stereology","dir":"Articles","previous_headings":"","what":"Stereology","title":"Stereology","text":"stereology try estimate properties - volume, count, porosity, surface area - images represent lower dimension element(property) interest. example estimating porosity yellow sponge 2D image number cells given tissue sample (histological investigation). Given example porososity sponge - .e., volume air bubbles divided total volume - use two approaches estimate : can use point estimator, points arranged grid plotted top image. count proportion points positioned inside air bubbles use estimator porosity. can use line estimator, grid lines plotted top image. calculated proportion length grid lines covered bubbles. estimator takes two “clicks” per bubble contrast point grid estimator, user instead clicks per grid point.","code":""},{"path":"/articles/load_img.html","id":"section-line-estimator","dir":"Articles","previous_headings":"","what":"Line estimator","title":"Stereology","text":"following example use line estimator find porosity sponge. function line_estimator_app() takes several arguments: object (default = NULL) image data frame long format columns x, y, hexacode color; path path image, can used instead object; grid_number decides vertical lines (horizontal lines separated distance x-axis lines might differ grid_number); finally seed makes random initialization gridlines bit less random. One must always assign two points one air bubble. one misses point, assign new point top (possible remove points). Always make sure lines completed using estimates. Alternate horizontal vertical lines reduce potential bias obtain better estimate. Let’s try finding points sponge. Follow link, see line estimator works.","code":""},{"path":"/articles/load_img.html","id":"section-point-estimator","dir":"Articles","previous_headings":"","what":"Point estimator","title":"Stereology","text":"Properties porosity cross sectional area can also estimated imposing grid points image object interest. property computed fraction points lie within relevant areas. application lets also included package can launched calling can also accessed online image uploaded clicking “browse” selecting file. “update” clicked selected image appear grid superimposed . relevant points selected clicking relevant points selected “estimate” clicked. Now fraction selected points appears. selected points can viewed “points” tab.","code":"point_estimator_app()"},{"path":"/articles/load_img.html","id":"section-theoretic-exploration-of-an-image-","dir":"Articles","previous_headings":"","what":"Theoretic exploration of an image.","title":"Stereology","text":"functions ‘bw_mat()’ ‘th_i_est()’ meant used give user theoretic estimators based image.  function ‘bw_mat()’ takes two arguments path image stored threshold used binary conversion. returns list 2 elements. first one matrix 1s 0s, generated given image. second one plot black white image, order user check adjustments threshold needed.  function ‘th_i_est()’ provides estimates white portions image provided 2 types grid, point grid line grid. takes 5 arguments:  - mtr: matrix generated using function ‘bw_mat()’. - x: index pixel-row start grid, - y: index pixel-column start grid, - lx: amount horizontal indices used, - ly: amount vertical indices used. function outputs list containing estimators.","code":""},{"path":"/articles/load_img.html","id":"section-examples-of-theoretical-exploration-of-images-","dir":"Articles","previous_headings":"Theoretic exploration of an image.","what":"Examples of theoretical exploration of images.","title":"Stereology","text":", two examples functions ‘bw_mat()’ ‘th_i_est()’ used.","code":""},{"path":"/articles/load_img.html","id":"section-example-a-","dir":"Articles","previous_headings":"Theoretic exploration of an image. > Examples of theoretical exploration of images.","what":"Example A.","title":"Stereology","text":"First, image file used loaded onto R, function bw_mat() used 1899 1266 matrix generated. case, 0s 1s represent whether area ‘filled’ sponge respectively. reference plot, 0s represent white area 1s black one. using generated matrix (‘$matrix’), start pixel/entry (x=)700 create (lx=)18 points/lines horizontal direction. vertical direction, start pixel/entry (y=)500 create (ly=)12 points/lines.","code":"# Loading the image.  # To use a PNG/JPEG/BMP image stored on your computer try: # path <- \"~/images.png\" path <- system.file('extdata/sponge3.jpg',package='Stereology')  # Applying bw_mat(). a <- bw_mat(path) str(a) #> List of 2 #>  $ img_mat: 'bw_img' num [1:1899, 1:1266] 1 1 1 1 1 1 1 1 1 1 ... #>  $ bw_img : 'cimg' num [1:1899, 1:1266, 1, 1] 0 0 0 0 0 0 0 0 0 0 ...  # Applying th_i_ests(). est_a <- th_i_ests(mtr = a$img_mat, x = 700, y = 500, lx= 18, ly = 12)  # Print all different outputs. est_a #> $point_mean #> [1] 0.375 #>  #> $line_mean #> [1] 0.3197077 #>  #> $point_var #> [1] 0.002055961 #>  #> $v_lines_var #> [1] 0.000346328 #>  #> $h_lines_var #> [1] 0.0003616901 #>  #> $sum_lines_var #> [1] 0.0007080181"},{"path":"/articles/load_img.html","id":"section-example-b-","dir":"Articles","previous_headings":"Theoretic exploration of an image. > Examples of theoretical exploration of images.","what":"Example B.","title":"Stereology","text":"example, focus attention threshold. illustrate using image .  , present image 3 different thresholds (0.75, 0.65 0.55 respectively), highlight fact luminosity image plays important part.    Finally, observe different estimators case.","code":"# Loading the image. path2 <- system.file('extdata/smallsponge.jpg',package='Stereology')  # Applying bw_mat(). b <- bw_mat(path2, 0.75) d <- bw_mat(path2, 0.65) e <- bw_mat(path2, 0.55) # The biggest pore in \"e\". e$img_mat[160:175, 255:267] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #>  [2,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #>  [3,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #>  [4,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #>  [5,]    0    0    0    0    1    1    1    1    1     1     1     0     0 #>  [6,]    0    0    0    0    1    1    1    1    1     1     1     0     0 #>  [7,]    0    0    0    0    1    1    1    1    1     1     1     1     0 #>  [8,]    0    0    0    1    1    1    1    1    1     1     1     1     0 #>  [9,]    0    0    0    0    1    1    1    1    1     1     1     1     0 #> [10,]    0    0    0    0    1    1    1    1    1     1     1     0     0 #> [11,]    0    0    0    0    1    1    1    1    1     1     1     0     0 #> [12,]    0    0    0    0    1    1    1    1    1     1     0     0     0 #> [13,]    0    0    0    0    0    0    1    1    0     0     0     0     0 #> [14,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [15,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [16,]    0    0    0    0    0    0    0    0    0     0     0     0     0  # Applying th_i_ests(). est_b <- th_i_ests(mtr = b$img_mat, x = 10, y = 20, lx= 5, ly = 5) est_d <- th_i_ests(mtr = d$img_mat, x = 10, y = 20, lx= 5, ly = 5) est_e <- th_i_ests(mtr = e$img_mat, x = 10, y = 20, lx= 5, ly = 5)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nikoleta Kakoulidou. Author. Mathias Christensen. Author. Johan Lassen. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kakoulidou N, Christensen M, Lassen J (2021). Stereology: Porosity estimation. R package version 0.1.0.","code":"@Manual{,   title = {Stereology: Porosity estimation},   author = {Nikoleta Kakoulidou and Mathias Christensen and Johan Lassen},   year = {2021},   note = {R package version 0.1.0}, }"},{"path":[]},{"path":"/index.html","id":"purpose-to-create-a-package-about-stereology","dir":"","previous_headings":"","what":"Purpose: To create a package about stereology.","title":"Porosity estimation","text":"Project manager: Nikoleta Kakoulidou Document manager: Johan Lassen Quality manager: Mathias Christensen","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation.","title":"Porosity estimation","text":"install R package, start installing “devtools” package. best way CRAN, typing: install.packages(“devtools”) , install package use: devtools::install_github(“AdvancedR-2021/Sterology”, build_vignettes = TRUE)","code":""},{"path":"/reference/line_estimator_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Porosity estimator — line_estimator_app","title":"Porosity estimator — line_estimator_app","text":"function line_estimator_app() takes several arguments: object (default = NULL) image data frame long format columns x, y, hexacode color; path path image, can used instead object; grid_number decides vertical lines (horisontal lines separated distance x-axis lines might differ grid_number); finally seed makes random initialisation gridlines bit less random. Rules line estimator: - One must always assign two points one air bubble. - one misses point, assign new point top (possible remove points). - Always make sure lines completed using estimates. - Alternate completing horisontal vertical lines reduce potential bias obtain better estimate.","code":""},{"path":"/reference/line_estimator_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Porosity estimator — line_estimator_app","text":"","code":"line_estimator_app(   object = NULL,   path = system.file(\"extdata\", \"sponge3.jpg\", package = \"Stereology\"),   grid_number = 10,   seed = 1 )"},{"path":"/reference/line_estimator_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Porosity estimator — line_estimator_app","text":"path","code":""},{"path":"/reference/line_estimator_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Porosity estimator — line_estimator_app","text":"Data table locations crossings","code":""},{"path":"/reference/point_estimator_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch point estimator app — point_estimator_app","title":"Launch point estimator app — point_estimator_app","text":"Running function launches interactive app allows  upload image, plot points , select relevant points  estimate properties based . app open press \"Update\"  button plot image points. image provided, default image  plotted. Please aware takes 30 seconds image  load. Click points appear regions, whose area/volume  want estimate. default picturethat pores  sponge. pressed relevant points click \"estimate\" button  get result.   Depends following packages:   shiny, shinythemes,plotly,ggplot2,dplyr,readr","code":""},{"path":"/reference/point_estimator_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch point estimator app — point_estimator_app","text":"","code":"point_estimator_app()"},{"path":"/reference/point_estimator_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch point estimator app — point_estimator_app","text":"Launches app","code":""},{"path":"/reference/Theoretic.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretic estimations. — Theoretic","title":"Theoretic estimations. — Theoretic","text":"2 functions: 'bw_mat()' 'th_i_est()', offering exploration   theoretical estimates image. details use:    browseVignettes(package = \"Stereology\")","code":""},{"path":"/reference/Theoretic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretic estimations. — Theoretic","text":"","code":"bw_mat(image_path, thr = 0.5)  th_i_ests(mtr, x, y, lx, ly)"},{"path":"/reference/Theoretic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretic estimations. — Theoretic","text":"image_path path image stored. thr threshold used turn image black white. default value 0.5. mtr matrix generated using function 'bw_mat()'. x Numeric variable. index pixel-row start grid. y Numeric variable. index pixel-column start grid. lx Numeric variable. amount horizontal indices used. ly Numeric variable. amount vertical indices used.","code":""},{"path":"/reference/Theoretic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretic estimations. — Theoretic","text":"function 'bw_mat()' returns list containing:   1) matrix represents black white version image   used input,   2) plot black white version image. function 'th_i_est()' returns list containing:   1) point_mean: mean black pixels point grid method,   2) line_mean: mean black pixels line grid method.   3) point_var: variance black pixels point grid method.   4) v_lines_var: variance black pixels using vertical lines grid.   5) h_lines_var: variance black pixels using horizontal lines grid.   6) sum_lines_var: sum variance horizontal vertical lines grid. dependence \"vertical variance\" \"horizontal variance\", output useful counterexamples.","code":""},{"path":"/reference/Theoretic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretic estimations. — Theoretic","text":"","code":"# Loading the image.  # To use a PNG/JPEG/BMP image stored on your computer try: # path <- \"~/images.png\" path <- system.file('extdata/sponge3.jpg',package='Stereology')  # Applying bw_mat(). a <- bw_mat(path)   # Applying th_i_ests() est_a <- th_i_ests(mtr = a$img_mat, x = 700, y = 500, lx= 18, ly = 12) est_a #> $point_mean #> [1] 0.375 #>  #> $line_mean #> [1] 0.3197077 #>  #> $point_var #> [1] 0.002055961 #>  #> $v_lines_var #> [1] 0.000346328 #>  #> $h_lines_var #> [1] 0.0003616901 #>  #> $sum_lines_var #> [1] 0.0007080181 #>   # For more details use: browseVignettes(package = \"Stereology\")."}]
